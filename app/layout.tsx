
import type { Metadata } from "next";
import Navbar from "../components/Navbar/page";
import "./globals.css";
import { ThemeProvider } from "@/components/themes-provider";
import { Footer } from "@/components/Footer/page";
import { AuthProvider, useAuth } from "@/components/context/AuthContext";
import { AuthProviderWrapper } from "@/components/context/authProviderWrapper";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {


  return (
    <html lang="en" suppressHydrationWarning>
      <body className="antialiased flex flex-col min-h-screen overflow-y-auto scrollbar-hidden">
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {/* Wrap in AuthProvider */}
          <AuthProvider>
            {/* Key changes force remount */}
            <AuthProviderWrapper>
              <Navbar />
              <main className="flex-1">{children}</main>
              <Footer />
            </AuthProviderWrapper>
          </AuthProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}

function AppWrapper({
  children,
  setAppKey,
}: {
  children: React.ReactNode;
  setAppKey: React.Dispatch<React.SetStateAction<number>>;
}) {
  const { user, logout } = useAuth();

  // Patch logout to force remount
  const handleLogout = async () => {
    await logout();
    setAppKey((prev) => prev + 1); // force remount
  };

  // You can pass handleLogout to Navbar if needed
  return <>{children}</>;
}
